#pygame.image.save(chunk.getSurface(0),"goo.png")

display.fill((0,0,0))

        x = 0
        y = 0
        for i in range(len(tiles)):
            display.blit(pygame.transform.scale_by(tiles[i], ZOOM), (x, y))
            x += TILE_HEIGHT * ZOOM
            if x > DISPLAY_WIDTH - (TILE_WIDTH * ZOOM):
                y += TILE_WIDTH * ZOOM
                x = 0
            if y > DISPLAY_HEIGHT - (TILE_HEIGHT * ZOOM):
                x = 0
                y = 0
        for i in range(len(tiles)):
            random_color = random.randint(0,255),random.randint(0,255),random.randint(0,255)
            display.blit(pygame.transform.scale_by(change_surface.recolor_surface(tiles[i], (255,255,255), random_color), ZOOM), (x, y))
            x += TILE_HEIGHT * ZOOM
            if x > DISPLAY_WIDTH - (TILE_HEIGHT * ZOOM):
                y += TILE_WIDTH * ZOOM
                x = 0
            if y > DISPLAY_HEIGHT - (TILE_HEIGHT * ZOOM):
                x = 0
                y = 0
        random_color = random.randint(0,255),random.randint(0,255),random.randint(0,255)
        for i in range(len(tiles)):
            display.blit(pygame.transform.scale_by(change_surface.recolor_surface(tiles[i], (255,255,255), random_color), ZOOM), (x, y))
            x += TILE_HEIGHT * ZOOM
            if x > DISPLAY_WIDTH - (TILE_HEIGHT * ZOOM):
                y += TILE_WIDTH * ZOOM
                x = 0
            if y > DISPLAY_HEIGHT - (TILE_HEIGHT * ZOOM):
                x = 0
                y = 0


import pygame
import os

script_dir = os.path.dirname(os.path.abspath(__file__))
os.chdir(script_dir)

# Initialize
pygame.init()
WIDTH, HEIGHT, ZOOM = 800, 800, 1
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("doodoo")

# Grid
TILE_SIZE = 8
GRID_WIDTH, GRID_HEIGHT = WIDTH // TILE_SIZE, HEIGHT // TILE_SIZE

# Pre-render grid
grid_surface = pygame.Surface((WIDTH, HEIGHT), pygame.SRCALPHA)
for x in range(0, WIDTH, TILE_SIZE):
    pygame.draw.line(grid_surface, (50, 50, 50), (x, 0), (x, HEIGHT))
for y in range(0, HEIGHT, TILE_SIZE):
    pygame.draw.line(grid_surface, (50, 50, 50), (0, y), (WIDTH, y))

# Player
player_img = pygame.image.load(os.path.join("player.png")).convert_alpha()
player_rect = player_img.get_rect(center=(WIDTH//2, HEIGHT//2))

# Game loop
running = True
clock = pygame.time.Clock()

while running:
    # Handle events
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
    
    # Movement
    keys = pygame.key.get_pressed()
    for key in keys:
        if key == True:
            if keys[pygame.K_LEFT] or keys[pygame.K_KP4]: player_rect.x -= 200
            if keys[pygame.K_RIGHT] or keys[pygame.K_KP6]: player_rect.x += 200
            if keys[pygame.K_UP] or keys[pygame.K_KP8]: player_rect.y -= 200
            if keys[pygame.K_DOWN] or keys[pygame.K_KP2]: player_rect.y += 200
            if keys[pygame.K_KP7]:
                player_rect.x -= 200
                player_rect.y -= 200
            if keys[pygame.K_KP9]:
                player_rect.x += 200
                player_rect.y -= 200
            if keys[pygame.K_KP3]:
                player_rect.x += 200
                player_rect.y += 200
            if keys[pygame.K_KP1]:
                player_rect.x -= 200
                player_rect.y += 200
    
    # Boundaries
    player_rect.x = max(0, min(WIDTH - player_rect.width, player_rect.x))
    player_rect.y = max(0, min(HEIGHT - player_rect.height, player_rect.y))

    # Drawing
    screen.fill((0, 0, 0))
    screen.blit(grid_surface, (0, 0))
    screen.blit(player_img, player_rect)
    
    pygame.display.flip()
    dt = clock.tick(60) / 1000

pygame.quit()